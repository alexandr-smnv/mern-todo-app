{"version":3,"sources":["reportWebVitals.js","redux/constants/userConstants.js","redux/constants/notesConstants.js","redux/store.js","redux/reducers/userReducers.js","redux/reducers/notesReducers.js","redux/actions/userActions.js","components/Header/Header.js","components/Footer/Footer.js","screens/LandingPage/LandingPage.js","components/MainScreen/MainScreen.js","redux/actions/notesActions.js","components/Loading/Loading.js","components/ErrorMessage/ErrorMessage.js","screens/NotesPage/NotesPage.js","screens/LoginPage/LoginPage.js","screens/RegisterPage/RegisterPage.js","screens/CreateNote/CreateNote.js","screens/SingleNote/SingleNote.js","screens/ProfilePage/ProfilePage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userUpdate","success","notesList","notes","noteCreate","noteUpdate","noteDelete","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","login","email","password","dispatch","a","config","headers","axios","post","data","setItem","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","useSelector","Navbar","bg","expand","variant","Container","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","Form","inline","FormControl","placehalder","onChange","e","target","value","Link","NavDropdown","title","Item","Divider","onClick","removeItem","push","Footer","style","width","position","bottom","display","justifyContent","Row","Col","LandingPage","useEffect","Button","size","MainScreen","children","deleteNote","getState","Authorization","token","delete","Loading","Spinner","height","animation","ErrorMessage","Alert","fontSize","NotesPage","search","loadingDelete","errorDelete","successDelete","successCreate","successUpdate","get","marginLeft","marginBottom","reverse","filter","filteredNote","toLowerCase","includes","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","href","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginPage","React","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","placeholder","RegisterPage","setName","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","File","pics","undefined","FormData","append","fetch","method","body","res","json","console","log","url","toString","catch","postDetails","files","label","custom","CreateNote","setTitle","setContent","setCategory","resetHandler","createNote","Date","toLocaleDateString","SingleNote","useParams","date","setDate","updatedAt","fetching","put","updateNote","deleteHandler","ProfilePage","confirmPassword","md","user","alignItem","src","alt","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc77c3df.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'","export const NOTES_LIST_REQUEST = 'NOTES_LIST_REQUEST'\r\nexport const NOTES_LIST_SUCCESS = 'NOTES_LIST_SUCCESS'\r\nexport const NOTES_LIST_FAIL = 'NOTES_LIST_FAIL'\r\n\r\nexport const NOTES_CREATE_REQUEST = 'NOTES_CREATE_REQUEST'\r\nexport const NOTES_CREATE_SUCCESS = 'NOTES_CREATE_SUCCESS'\r\nexport const NOTES_CREATE_FAIL = 'NOTES_CREATE_FAIL'\r\n\r\nexport const NOTES_UPDATE_REQUEST = 'NOTES_UPDATE_REQUEST'\r\nexport const NOTES_UPDATE_SUCCESS = 'NOTES_UPDATE_SUCCESS'\r\nexport const NOTES_UPDATE_FAIL = 'NOTES_UPDATE_FAIL'\r\n\r\nexport const NOTES_DELETE_REQUEST = 'NOTES_DELETE_REQUEST'\r\nexport const NOTES_DELETE_SUCCESS = 'NOTES_DELETE_SUCCESS'\r\nexport const NOTES_DELETE_FAIL = 'NOTES_DELETE_FAIL'","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\nimport {userLoginReducer, userRegisterReducer, userUpdateReducer} from \"./reducers/userReducers\";\r\nimport {noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer} from \"./reducers/notesReducers\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userUpdateReducer,\r\n  notesList: noteListReducer,\r\n  noteCreate: noteCreateReducer,\r\n  noteUpdate: noteUpdateReducer,\r\n  noteDelete: noteDeleteReducer,\r\n})\r\n\r\n// получение данных из localStorage\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n// начальное состояние\r\nconst initialState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage\r\n  }\r\n}\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT, USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\";\r\n\r\n// reducer для авторзации\r\nexport const userLoginReducer = (state= {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// reducer для регистрации\r\nexport const userRegisterReducer = (state= {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// reducer для редактирования пользователя\r\nexport const userUpdateReducer = (state= {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\n","import {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST, NOTES_CREATE_SUCCESS, NOTES_DELETE_FAIL, NOTES_DELETE_REQUEST, NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS, NOTES_UPDATE_FAIL, NOTES_UPDATE_REQUEST, NOTES_UPDATE_SUCCESS\r\n} from \"../constants/notesConstants\";\r\n\r\n// reducer для получения заметок\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTES_LIST_REQUEST:\r\n      return { loading: true }\r\n    case NOTES_LIST_SUCCESS:\r\n      return { loading: false, notes: action.payload }\r\n    case NOTES_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// reducer для создания заметки\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case NOTES_CREATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case NOTES_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// reducer для обновления заметки\r\nexport const noteUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case NOTES_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case NOTES_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// reducer для удаления заметки\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case NOTES_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case NOTES_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false }\r\n    default:\r\n      return state\r\n  }\r\n}","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT, USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\";\r\n\r\n// авторизация\r\nexport const login = (email, password) => async (dispatch) => {\r\n  dispatch({type: USER_LOGIN_REQUEST})\r\n\r\n  try {\r\n    // объект headers\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }\r\n\r\n    // получение данных о пользователе\r\n    const {data} = await axios.post('/api/auth/login', {email, password}, config)\r\n\r\n    dispatch({type: USER_LOGIN_SUCCESS, payload: data})\r\n\r\n    // запись данных о пользователе в localStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\n// выход из профиля\r\nexport const logout = () => async (dispatch) => {\r\n  // очистка localStorage\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({type: USER_LOGOUT})\r\n}\r\n\r\n// регистрация\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n    try {\r\n      dispatch({type: USER_REGISTER_REQUEST})\r\n\r\n      // объект headers\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\"\r\n        }\r\n      }\r\n\r\n      // получение данных о пользователе\r\n      const {data} = await axios.post('/api/auth/register', {name, pic, email, password}, config)\r\n\r\n      dispatch({type: USER_REGISTER_SUCCESS, payload: data})\r\n      // запись данных о пользователе в userLogin в store\r\n      dispatch({type: USER_LOGIN_SUCCESS, payload: data})\r\n      // запись данных о пользователе в localStorage\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n      })\r\n    }\r\n}\r\n\r\n// редактирование профиля\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({type: USER_UPDATE_REQUEST})\r\n\r\n    // получение данных о пользователе\r\n    const {userLogin: {userInfo}} = getState()\r\n\r\n    // объект headers\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // получение обновленных данных о пользователе\r\n    const { data } = await axios.post('/api/auth/profile', user, config)\r\n\r\n    dispatch({type: USER_UPDATE_SUCCESS, payload: data})\r\n    // запись данных о пользователе в userLogin в store\r\n    dispatch({type: USER_LOGIN_SUCCESS, payload: data})\r\n    // запись данных о пользователе в localStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Container, Form, FormControl, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport {logout} from \"../../redux/actions/userActions\";\r\n\r\nconst Header = ({setSearch}) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const {userInfo} = useSelector(state => state.userLogin)\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Link to=\"/\">\r\n            Приложение заметок\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"m-auto\">\r\n            <Form inline>\r\n              <FormControl\r\n                type=\"text\"\r\n                placehalder=\"Search\"\r\n                className=\"mr-sm-2\"\r\n                onChange={e => setSearch(e.target.value)}\r\n              />\r\n            </Form>\r\n          </Nav>\r\n          {userInfo && <Nav>\r\n            <Nav.Link>\r\n              <Link to=\"/notes\">Мои задачи</Link>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Профиль\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item>\r\n                <Link to=\"/profile\">Настройки</Link>\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider/>\r\n              <NavDropdown.Item onClick={logoutHandler}>Выйти</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>}\r\n\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer style={{\r\n      width: \"100%\",\r\n      position: \"relative\",\r\n      bottom: 0,\r\n      display: 'flex',\r\n      justifyContent: 'center'\r\n    }}>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Note App</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, {useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {Container, Row, Button} from \"react-bootstrap\";\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = () => {\r\n  const history = useHistory()\r\n\r\n  // если localStorage есть данные о пользователе - редирект на заметки\r\n  useEffect(() => {\r\n    const userInfo = localStorage.getItem('userInfo')\r\n\r\n    if (userInfo) {\r\n      history.push(\"/notes\")\r\n    }\r\n  }, [history])\r\n\r\n  return (\r\n    <div className='main'>\r\n      <Container>\r\n        <Row>\r\n          <div className=\"intro-text\">\r\n            <div>\r\n              <h1 className=\"title\">Добро пожаловать в Note App</h1>\r\n              <p className=\"subtitle\">Лучшее приложение для твоих задач.</p>\r\n            </div>\r\n            <div className=\"button__container\">\r\n              <Link to=\"/login\">\r\n                <Button size=\"lg\" className=\"landing__button\">Войти</Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Button size=\"lg\" className=\"landing__button\" variant=\"outline-primary\">Регистрация</Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport './MainScreen.css'\r\n\r\nconst MainScreen = ({title, children}) => {\r\n  return (\r\n    <div className=\"main__back\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {\r\n              title && (\r\n              <>\r\n                <h1 className=\"heading\">{title}</h1>\r\n                <hr/>\r\n              </>\r\n              )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST, NOTES_CREATE_SUCCESS, NOTES_DELETE_FAIL, NOTES_DELETE_REQUEST, NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS, NOTES_UPDATE_FAIL, NOTES_UPDATE_REQUEST, NOTES_UPDATE_SUCCESS\r\n} from \"../constants/notesConstants\";\r\nimport axios from \"axios\";\r\n\r\n// загрузка заметок\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({type: NOTES_LIST_REQUEST})\r\n\r\n    // получение информации об авторизованном пользователе\r\n    const {userLogin: {userInfo}} = getState()\r\n\r\n    // объект headers\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // получение всех заметок\r\n    const { data } = await axios.get('/api/notes', config)\r\n\r\n    dispatch({type: NOTES_LIST_SUCCESS, payload: data})\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTES_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n\r\n}\r\n\r\n// создание заметки\r\nexport const createNote = (title, content, category) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({type: NOTES_CREATE_REQUEST})\r\n\r\n    // получение информации об авторизованном пользователе\r\n    const {userLogin: {userInfo}} = getState()\r\n\r\n    // объект headers\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // получение созданной заметки\r\n    const { data } = await axios.post('/api/notes/create', {title, content, category}, config)\r\n\r\n    dispatch({type: NOTES_CREATE_SUCCESS, payload: data})\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTES_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n\r\n}\r\n\r\n// редактирование заметки\r\nexport const updateNote = (id, title, content, category) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({type: NOTES_UPDATE_REQUEST})\r\n\r\n    // получение информации об авторизованном пользователе\r\n    const {userLogin: {userInfo}} = getState()\r\n\r\n    // объект headers\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // получение отредактированной заметки\r\n    const { data } = await axios.put(`/api/notes/${id}`, {title, content, category}, config)\r\n\r\n    dispatch({type: NOTES_UPDATE_SUCCESS, payload: data})\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTES_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n\r\n}\r\n\r\n// удаление заметки\r\nexport const deleteNote = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({type: NOTES_DELETE_REQUEST})\r\n\r\n    // получение информации об авторизованном пользователе\r\n    const {userLogin: {userInfo}} = getState()\r\n\r\n    // объект headers\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // получение сообщения об удалении заметки\r\n    const { data } = await axios.delete(`/api/notes/${id}`, config)\r\n\r\n    dispatch({type: NOTES_DELETE_SUCCESS, payload: data})\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTES_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n\r\n}","import React from 'react';\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport './Loading.css'\r\n\r\nconst Loading = ({size = 100}) => {\r\n  return (\r\n    <div className=\"spinner__container\">\r\n      <Spinner\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n        }}\r\n        animation=\"border\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ({variant = 'info', children}) => {\r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20}}>\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, {useEffect} from 'react';\r\nimport MainScreen from \"../../components/MainScreen/MainScreen\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Link} from \"react-router-dom\";\r\nimport {Accordion, Badge, Button, Card} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteNote, listNotes} from \"../../redux/actions/notesActions\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\n\r\nconst NotesPage = ({search}) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const {loading, notes, error} = useSelector(state => state.notesList)\r\n  const {loading: loadingDelete, error: errorDelete, success: successDelete} = useSelector(state => state.noteDelete)\r\n  const {userInfo} = useSelector(state => state.userLogin)\r\n  const {success: successCreate} = useSelector(state => state.noteCreate)\r\n  const {success: successUpdate} = useSelector(state => state.noteUpdate)\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Вы уверены?')) {\r\n      dispatch(deleteNote(id))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes())\r\n    if (!userInfo) {\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, successCreate, successUpdate, successDelete, userInfo, history])\r\n\r\n  return (\r\n    <MainScreen title={`Добро пожаловать ${userInfo.name}`}>\r\n      <Link to=\"/createnote\">\r\n        <Button style={{marginLeft: 10, marginBottom: 6}} size=\"lg\">\r\n          Создать новую задачу\r\n        </Button>\r\n      </Link>\r\n\r\n      {errorDelete && <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>}\r\n      {loadingDelete && <Loading />}\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {loading && <Loading />}\r\n\r\n      {\r\n        notes?.reverse()\r\n          .filter(filteredNote => filteredNote.title.toLowerCase().includes(search.toLowerCase()))\r\n            .map(note => (\r\n          <Accordion key={note._id}>\r\n            <Card style={{margin: 10}}>\r\n              <Card.Header style={{display: \"flex\"}}>\r\n                <span style={{\r\n                  color: 'black',\r\n                  textDecoration: 'none',\r\n                  flex: 1,\r\n                  cursor: 'pointer',\r\n                  alignSelf: 'center',\r\n                  fontSize: 18\r\n                }}\r\n                >\r\n                  <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\r\n                    {note.title}\r\n                  </Accordion.Toggle>\r\n            </span>\r\n                <div>\r\n                  <Button href={`/note/${note._id}`}>Редактировать</Button>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"mx-2\"\r\n                    onClick={() => deleteHandler(note._id)}\r\n                  >\r\n                    Удалить\r\n                  </Button>\r\n                </div>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n\r\n                  <h4>\r\n                    <Badge variant=\"success\">Категория - {note.category}</Badge>\r\n                  </h4>\r\n\r\n                  <blockquote className=\"blockquote mb-0\">\r\n                    <p>{note.content}</p>\r\n                    <footer className=\"blockquote-footer\">\r\n                      Создана{\" \"}\r\n                      <city title=\"Source Title\">\r\n                        {note.createdAt.substring(0, 10)}\r\n                      </city>\r\n                    </footer>\r\n                  </blockquote>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        ))}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default NotesPage;\r\n","import React, {useEffect} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\nimport MainScreen from \"../../components/MainScreen/MainScreen\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\n\r\nimport {login} from \"../../redux/actions/userActions\";\r\n\r\nimport './LoginPage.css'\r\n\r\nconst LoginPage = () => {\r\n  const history = useHistory()\r\n  const [email, setEmail] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const {loading, error, userInfo} = useSelector(state => state.userLogin)\r\n\r\n  // редирект на заметки если userInfo не пустой\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/notes')\r\n    }\r\n  }, [userInfo, history])\r\n\r\n  // обработка submit\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"Авторизация\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              value={email}\r\n              type=\"email\"\r\n              placeholder=\"Введите email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Пароль</Form.Label>\r\n            <Form.Control\r\n              value={password}\r\n              type=\"password\"\r\n              placeholder=\"Введите пароль\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Войти\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Новый пользователь? <Link to=\"/register\">Зарегистрируйтесь!</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {useEffect} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\nimport MainScreen from \"../../components/MainScreen/MainScreen\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\n\r\nimport {register} from \"../../redux/actions/userActions\";\r\n\r\nimport './Register.css';\r\n\r\n\r\n\r\nconst RegisterPage = () => {\r\n  const history = useHistory()\r\n  const [email, setEmail] = React.useState(\"\")\r\n  const [name, setName] = React.useState(\"\")\r\n  const [pic, setPic] = React.useState(\r\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n  )\r\n  const [password, setPassword] = React.useState(\"\")\r\n  const [confirmpassword, setConfirmPassword] = React.useState(\"\")\r\n  const [message, setMessage] = React.useState(null)\r\n  const [picMessage, setPicMessage] = React.useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const {error, loading, userInfo} = useSelector(state => state.userRegister)\r\n\r\n  // редирект на заметки если userInfo не пустой\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/notes')\r\n    }\r\n  }, [userInfo, history])\r\n\r\n  // обработка submit\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmpassword) {\r\n      setMessage('Пароли не совпадают')\r\n    } else {\r\n      dispatch(register(name, email, password, pic))\r\n    }\r\n  }\r\n\r\n  // загрузка избражения на cloudinary для генерации ссылки\r\n  const postDetails = (pics) => {\r\n    if (pics === undefined) {\r\n      return setPicMessage(\"Пожалуйста выберите изображение\")\r\n    }\r\n    setPicMessage(null)\r\n\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData()\r\n      data.append('file', pics)\r\n      data.append('upload_preset', 'noteApp')\r\n      data.append('cloud_name', 'dbpanugh0')\r\n      fetch(\"https://api.cloudinary.com/v1_1/dbpanugh0/image/upload\", {\r\n        method: 'post',\r\n        body: data\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data)\r\n          setPic(data.url.toString())\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    } else {\r\n      return setPicMessage(\"Пожалуйста выберите изображение\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"РЕГИСТРАЦИЯ\">\r\n      <div className=\"registerContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n        {loading && <Loading/>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Имя</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder=\"Введите имя\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Введите email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Пароль</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Введите пароль\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Подтверждение пароля</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Введите пароль\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {picMessage && (\r\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n          )}\r\n          <Form.Group controlId=\"pic\">\r\n            <Form.Label>Изображение</Form.Label>\r\n            <Form.File\r\n              onChange={(e) => postDetails(e.target.files[0])}\r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Загрузите изображение\"\r\n              custom\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Регистрация\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            У Вас есть аккаунт? <Link to=\"/login\">Войти</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Button, Card, Form} from \"react-bootstrap\";\r\nimport {createNote} from \"../../redux/actions/notesActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport MainScreen from \"../../components/MainScreen/MainScreen\";\r\n\r\n\r\nconst CreateNote = () => {\r\n  const [title, setTitle] = React.useState('');\r\n  const [content, setContent] = React.useState('');\r\n  const [category, setCategory] = React.useState('');\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {loading, error} = useSelector(state => state.noteCreate)\r\n\r\n  const resetHandler = () => {\r\n    setTitle('')\r\n    setContent('')\r\n    setCategory('')\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (!title || !content || !category) return;\r\n\r\n    dispatch(createNote(title, content, category))\r\n\r\n    resetHandler()\r\n    history.push('/notes')\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"Создайте новую задачу\">\r\n      <Card>\r\n        <Card.Header>Создайте новую заметку</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Название</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Введите название\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Описание</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={content}\r\n                placeholder=\"Введите описание\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Предварительный просмотр</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Категория</Form.Label>\r\n              <Form.Control\r\n                type=\"category\"\r\n                value={category}\r\n                placeholder=\"Введите категорию\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            {loading && <Loading size={50} />}\r\n\r\n            <Button type=\"submit\" variant=\"primary\">Создать заметку</Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">Очистить</Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Создано - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n","import React, {useEffect} from 'react';\r\nimport MainScreen from \"../../components/MainScreen/MainScreen\";\r\nimport {Button, Card, Form} from \"react-bootstrap\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {deleteNote, updateNote} from \"../../redux/actions/notesActions\";\r\n\r\nconst SingleNote = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {id} = useParams()\r\n  const [title, setTitle] = React.useState('');\r\n  const [content, setContent] = React.useState('');\r\n  const [category, setCategory] = React.useState('');\r\n  const [date, setDate] = React.useState('');\r\n\r\n  const {loading, error} = useSelector(state => state.noteUpdate)\r\n  const {loading: loadingDelete, error: errorDelete} = useSelector(state => state.noteDelete)\r\n\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const {data} = await axios.get(`/api/notes/${id}`)\r\n      setTitle(data.title)\r\n      setContent(data.content)\r\n      setCategory(data.category)\r\n      setDate(data.updatedAt)\r\n    }\r\n    fetching()\r\n  }, [id, date])\r\n\r\n\r\n  const resetHandler = () => {\r\n    setTitle('')\r\n    setContent('')\r\n    setCategory('')\r\n  }\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault()\r\n    if (!title || !content || !category) return;\r\n    dispatch(updateNote(id, title, content, category))\r\n\r\n    resetHandler()\r\n    history.push('/notes')\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Вы уверены?')) {\r\n      dispatch(deleteNote(id))\r\n    }\r\n    history.push('/notes')\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"Редактирование заметки\">\r\n      <Card>\r\n        <Card.Header>Измените свою заметку</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading size={50}/>}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Название</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Введите название\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Описание</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={content}\r\n                placeholder=\"Введите описание\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Предварительный просмотр</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Категория</Form.Label>\r\n              <Form.Control\r\n                type=\"category\"\r\n                value={category}\r\n                placeholder=\"Введите категорию\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50}/>}\r\n            <Button type=\"submit\" variant=\"primary\">Обновить</Button>\r\n            <Button className=\"mx-2\" onClick={() => deleteHandler(id)} variant=\"danger\">Удалить заметку</Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Обновлено - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default SingleNote;\r\n","import React, {useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateProfile} from \"../../redux/actions/userActions\"\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen/MainScreen\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport './ProfilePage.css';\r\n\r\nconst ProfilePage = () => {\r\n\r\n  const [name, setName] = React.useState('')\r\n  const [email, setEmail] = React.useState('')\r\n  const [pic, setPic] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n  const [confirmPassword, setConfirmPassword] = React.useState('')\r\n  const [picMessage, setPicMessage] = React.useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {userInfo} = useSelector(state => state.userLogin)\r\n  const {loading, error, success} = useSelector(state => state.userUpdate)\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\")\r\n    } else {\r\n      setName(userInfo.name)\r\n      setEmail(userInfo.email)\r\n      setPic(userInfo.pic)\r\n    }\r\n  }, [history, userInfo])\r\n\r\n  const postDetails = (pics) => {\r\n    if (pics === undefined) {\r\n      return setPicMessage(\"Пожалуйста выберите изображение\")\r\n    }\r\n    setPicMessage(null)\r\n\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData()\r\n      data.append('file', pics)\r\n      data.append('upload_preset', 'noteApp')\r\n      data.append('cloud_name', 'dbpanugh0')\r\n      fetch(\"https://api.cloudinary.com/v1_1/dbpanugh0/image/upload\", {\r\n        method: 'post',\r\n        body: data\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data)\r\n          setPic(data.url.toString())\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    } else {\r\n      return setPicMessage(\"Пожалуйста выберите изображение\")\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password === confirmPassword) {\r\n      dispatch(updateProfile({name, email, password, pic}))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"Редактирование профиля\">\r\n      <div>\r\n        <Row className=\"profileContainer\" >\r\n          <Col md={6}>\r\n            <Form onSubmit={submitHandler}>\r\n              {loading && <Loading/>}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">Успешно обновлено</ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Имя</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Введите имя\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Введите email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Пароль</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Введите пароль\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Подтвердите пароль</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Подтвердите пароль\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Обновите изображение профиля</Form.Label>\r\n                <Form.File\r\n                  type=\"image/png\"\r\n                  id=\"custom-file\"\r\n                  label=\"Обновите изобржение профиля\"\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  custom\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Обновить\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItem: 'center'\r\n            }}\r\n          >\r\n            <img src={userInfo.pic} alt=\"Изображение профиля\" className=\"profilePic\"/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport NotesPage from \"./screens/NotesPage/NotesPage\";\nimport LoginPage from \"./screens/LoginPage/LoginPage\";\nimport RegisterPage from \"./screens/RegisterPage/RegisterPage\";\nimport CreateNote from \"./screens/CreateNote/CreateNote\";\nimport SingleNote from \"./screens/SingleNote/SingleNote\";\nimport ProfilePage from \"./screens/ProfilePage/ProfilePage\";\nimport './App.css';\n\n\n\nfunction App() {\n  const [search, setSearch] = React.useState('');\n\n  return (\n    <BrowserRouter>\n      <Header setSearch={setSearch}/>\n      <Switch>\n        <Route path=\"/\" exact>\n          <LandingPage />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route path=\"/profile\">\n          <ProfilePage />\n        </Route>\n        <Route path=\"/createnote\">\n          <CreateNote />\n        </Route>\n        <Route path=\"/note/:id\">\n          <SingleNote />\n        </Route>\n        <Route path=\"/notes\">\n          <NotesPage search={search}/>\n        </Route>\n      </Switch>\n      <Footer/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from './App';\nimport './bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}